{"version":3,"sources":["components/EmojiModal.js","actions.js","components/Header.js","components/GameBoard.js","components/ScoreBoard.js","components/App.js","serviceWorker.js","reducer.js","store.js","index.js"],"names":["connect","dispatch","handleEmoji","emojiUniCode","type","payload","props","className","nameSaved","setNameSaved","useState","emojiModal","setEmojiModal","toggleModal","useEffect","Modal","size","isOpen","modalTransition","timeout","backdropTransition","toggle","ModalHeader","ModalBody","role","aria-label","onClick","ModalFooter","state","player1","player2","winner","saveName","name","restartGame","setName","value","onChange","e","target","placeholder","submitPlayerName","winDirection","rowIndex","cellIndex","winCombo","length","possibleWins","row0","row1","row2","column0","column1","column2","diagonal0","diagonal2","cellInWinCombo","JSON","stringify","console","log","i","player1Icon","player2Icon","field","makeMove","map","row","cell","String","fromCodePoint","parseInt","score","resetAll","toString","App","Boolean","window","location","hostname","match","initialState","currentPlayer","checkWin","fieldToCheck","player","every","reducer","action","updatedField","updateScore","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b7395b1d.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { handleEmoji } from \"../actions\";\n\nfunction EmojiModal (props) {\n    const {\n        className,\n        nameSaved,\n        setNameSaved,\n    } = props;\n\n    const [emojiModal, setEmojiModal] = useState(false);\n\n    const toggleModal = () => {\n        setEmojiModal(!emojiModal);\n    }\n\n    const handleEmoji = (emojiUniCode) => {\n        props.handleEmoji(emojiUniCode)\n        setEmojiModal(false);\n    }\n\n    useEffect(() => {\n        if (nameSaved) {\n            toggleModal();\n            setNameSaved(false);\n        }\n    }, [nameSaved, setNameSaved, toggleModal])\n\n    return (\n        <div>\n\n            <Modal size={\"lg\"} isOpen={emojiModal} modalTransition={{ timeout: 200 }} backdropTransition={{ timeout: 500 }}\n                   toggle={toggleModal} className={className}>\n                 <ModalHeader toggle={toggleModal}>Select your player's icon</ModalHeader>\n                <ModalBody>\n                    <div className={\"emoji-list\"}>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F469')}>&#x1F469;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F64E')}>&#x1F64E;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F441')}>&#x1F441;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F4A3')}>&#x1F4A3;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F49A')}>&#x1F49A;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F499')}>&#x1F499;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F648')}>&#x1F648;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F638')}>&#x1F638;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F916')}>&#x1F916;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F4A9')}>&#x1F4A9;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F608')}>&#x1F608;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F913')}>&#x1F913;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F920')}>&#x1F920;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F604')}>&#x1F604;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F47B')}>&#x1F47B;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F47D')}>&#x1F47D;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F9E0')}>&#x1F9E0;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F9DA')}>&#x1F9DA;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F9DC')}>&#x1F9DC;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F483')}>&#x1F483;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F46F')}>&#x1F46F;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F496')}>&#x1F496;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F64B')}>&#x1F64B;</span>\n                        <span role={\"img\"} aria-label={\"\"} onClick={() => handleEmoji('1F9DE')}>&#x1F9DE;</span>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                </ModalFooter>\n            </Modal>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    handleEmoji: (emojiUniCode) => dispatch(handleEmoji(emojiUniCode))\n})\n\nexport default connect(null, mapDispatchToProps)(EmojiModal);\n\n","export const makeMove = (rowIndex, cellIndex) => ({type: 'MOVE', payload: {rowIndex: rowIndex, cellIndex: cellIndex} });\n\nexport const saveName = (name) => ({type: 'SAVE_NAME', payload: name});\n\nexport const restartGame = (score) => ({type: 'RESTART_GAME', payload: score});\n\nexport const handleEmoji = (emojiUniCode) => ({type: 'CHOOSE_EMOJI', payload: emojiUniCode});\n\nexport const resetAll = () => ({type: 'RESET_ALL'});","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport {saveName} from \"../actions\";\nimport {restartGame} from \"../actions\";\nimport EmojiModal from \"./EmojiModal\";\n\nfunction Header(props) {\n\n    const [name, setName] = useState('');\n    const [nameSaved, setNameSaved] = useState(false);\n\n    const submitPlayerName = (name) => {\n        props.saveName(name)\n        setNameSaved(true);\n        setName('');\n    }\n\n    return (\n        <div className=\"header\">\n            <h2>Welcome to the coolest Tic-Tac-Toe ever.</h2>\n            {\n                props.player1 !== '' && props.player2 !== ''\n                    ? props.winner === null && <h3>{props.player1} and {props.player2} enjoy the game!</h3>\n                    : <div className={\"nameInputs\"}>\n                        <h3>Please enter name of\n                            the {props.player1 === '' ? 'first' : 'second'} player {props.player1 && 'to get started'}</h3>\n                        <input className={\"inputField\"} type={\"text\"} value={name} onChange={e => setName(e.target.value)}\n                               placeholder={\"Player's name\"}/>\n                        <button className={\"submitName-btn\"} onClick={() => submitPlayerName(name)}>submit</button>\n                    </div>\n            }\n            <EmojiModal\n                nameSaved={nameSaved}\n                setNameSaved={setNameSaved}\n            />\n            {\n                props.winner &&\n                <div className={\"gameOver\"}>\n                    {\n                        props.winner === 'tie'\n                            ? <h1> It's a tie! </h1>\n                            : <h1>{props.winner} has won. Congratulations!</h1>\n                    }\n                    <button className={\"restart-btn\"} onClick={() => props.restartGame(props.winner)}>Restart Game</button>\n                </div>\n            }\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    player1: state.player1,\n    player2: state.player2,\n    winner: state.winner\n})\n\nconst mapDispatchToProps = dispatch => ({\n    saveName: (name) => dispatch(saveName(name)),\n    restartGame: (winner) => dispatch(restartGame(winner))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\nimport {connect} from 'react-redux';\nimport {makeMove} from \"../actions\";\n\nfunction GameBoard(props) {\n\n    const makeMove = (rowIndex, cellIndex) => {\n        props.makeMove(rowIndex, cellIndex);\n    }\n\n    return (\n        <div className={\"gameContainer\"}>\n            <div className=\"gameBoard\">\n                {props.player1 && props.player2 &&\n                props.field.map((row, rowIndex) => (\n                    <div className={\"row\"}>\n                        {row.map((cell, cellIndex) => (\n                            <div className={'cell'}\n                                 onClick={() => makeMove(rowIndex, cellIndex)}>{cell === 'X' ? String.fromCodePoint(parseInt(props.player1Icon, 16)) : cell === 'O' ? String.fromCodePoint(parseInt(props.player2Icon, 16)) : null}<span className={props.winCombo.length === 3 && props.winCombo !== 'tie' &&`${winDirection(rowIndex, cellIndex, props.winCombo)}`}></span></div>\n                        ))\n                        }\n                    </div>\n                ))\n                }\n            </div>\n        </div>\n    );\n}\n\n\nconst winDirection = (rowIndex, cellIndex, winCombo) => {\n    if (winCombo.length === 3 && winCombo !== 'tie') {\n        const possibleWins = {\n            row0: [[0, 0], [0, 1], [0, 2]],\n            row1: [[1, 0], [1, 1], [1, 2]],\n            row2: [[2, 0], [2, 1], [2, 2]],\n            column0 : [[0, 0], [1, 0], [2, 0]],\n            column1 : [[0, 1], [1, 1], [2, 1]],\n            column2 : [[0, 2], [1, 2], [2, 2]],\n            diagonal0 : [[0, 0], [1, 1], [2, 2]],\n            diagonal2 : [[0, 2], [1, 1], [2, 0]],\n\n        }\n        if (cellInWinCombo(rowIndex, cellIndex, winCombo) && (JSON.stringify(winCombo) === JSON.stringify(possibleWins.row0) || JSON.stringify(winCombo) === JSON.stringify(possibleWins.row1) || JSON.stringify(winCombo) === JSON.stringify(possibleWins.row2))) {\n            console.log(\"cell in wincombo works: \", cellInWinCombo(rowIndex, cellIndex, winCombo))\n            console.log(\"json.stringify comparison works: \", JSON.stringify(winCombo) === JSON.stringify(possibleWins.row0))\n            return 'win-row';\n        }\n        if (cellInWinCombo(rowIndex, cellIndex, winCombo) && (JSON.stringify(winCombo) === JSON.stringify(possibleWins.column0) || JSON.stringify(winCombo) === JSON.stringify(possibleWins.column1) || JSON.stringify(winCombo) === JSON.stringify(possibleWins.column2))) return 'win-column';\n        if (cellInWinCombo(rowIndex, cellIndex, winCombo) && JSON.stringify(winCombo) === JSON.stringify(possibleWins.diagonal0)) return 'win-diagonal-right';\n        if (cellInWinCombo(rowIndex, cellIndex, winCombo) && JSON.stringify(winCombo) === JSON.stringify(possibleWins.diagonal2)) return 'win-diagonal-left';\n    }\n    return null;\n}\n\nconst cellInWinCombo = (rowIndex, cellIndex, winCombo) => {\n        for (let i = 0; i < 3; i++) {\n            if (winCombo[i][0] === rowIndex && winCombo[i][1] === cellIndex) return true;\n        }\n        return false;\n}\n\nconst mapStateToProps = state => ({\n    player1: state.player1,\n    player2: state.player2,\n    player1Icon: state.player1Icon,\n    player2Icon: state.player2Icon,\n    field: state.field,\n    winCombo: state.winCombo\n});\n\nconst mapDispatchToProps = dispatch => ({\n    makeMove: (rowIndex, cellIndex) => dispatch(makeMove(rowIndex, cellIndex))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GameBoard);\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { resetAll } from \"../actions\";\n\n\nfunction ScoreBoard(props) {\n\n    const handleResetAll  = () => {\n        props.resetAll();\n    }\n\n    return (\n\n                <div className={\"scoreContainer\"}>\n                    {\n                        props.player1 && props.player2 &&\n                            <>\n                            <div className={\"showScore\"}>\n                                <h4>Score</h4>\n                                <div><span className={\"scoreBoard-emoji\"}>{props.player1Icon && String.fromCodePoint(parseInt(props.player1Icon.toString(), 16))}</span>{props.player1}</div>\n                                <span>{props.score.player1}</span>\n                                <div><span className={\"scoreBoard-emoji\"}>{props.player2Icon && String.fromCodePoint(parseInt(props.player2Icon.toString(), 16))}</span>{props.player2}</div>\n                                <span>{props.score.player2}</span>\n                            </div>\n                            <button className={\"resetAll-btn\"} onClick={handleResetAll}>Reset All</button>\n                            </>\n                    }\n                </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    player1: state.player1,\n    player2: state.player2,\n    player1Icon: state.player1Icon,\n    player2Icon: state.player2Icon,\n    score: state.score\n});\n\nconst mapDispatchToProps = dispatch => ({\n    resetAll: () => dispatch(resetAll())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScoreBoard);\n\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../App.css';\nimport Header from \"./Header\";\nimport GameBoard from \"./GameBoard\";\nimport ScoreBoard from \"./ScoreBoard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <div className={\"app-container\"}>\n            <Header />\n            <div className={\"boards-container\"}>\n                <GameBoard />\n                <ScoreBoard />\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n    player1: '',\n    player2: '',\n    player1Icon: null,\n    player2Icon: null,\n    field: [\n        [null, null, null],\n        [null, null, null],\n        [null, null, null]\n    ],\n    currentPlayer: 1,\n    winner: null,\n    score: {player1: 0, player2: 0},\n    winCombo: []\n}\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case 'MOVE':\n            const updatedField = [...state.field];\n            if (state.currentPlayer === 1 && updatedField[action.payload.rowIndex][action.payload.cellIndex] === null) {\n                updatedField[action.payload.rowIndex][action.payload.cellIndex] = 'X';\n                return {\n                    ...state,\n                    field: [...updatedField],\n                    winner: checkWin(updatedField, 'X') === 'tie' ? 'tie' : checkWin(updatedField, 'X') ? state.player1 : null,\n                    currentPlayer: 2,\n                    winCombo: checkWin(updatedField, 'X') !== 'tie' && checkWin(updatedField, 'X') ? checkWin(updatedField, 'X') : []\n                    }\n            } else if (state.currentPlayer === 2 && updatedField[action.payload.rowIndex][action.payload.cellIndex] === null) {\n                updatedField[action.payload.rowIndex][action.payload.cellIndex] = 'O';\n                return {\n                    ...state,\n                    field: [...updatedField],\n                    winner: checkWin(updatedField, 'O') === 'tie' ? 'tie' : checkWin(updatedField, 'O') ? state.player2 : null,\n                    currentPlayer: 1,\n                    winCombo: checkWin(updatedField, 'O') !== 'tie' && checkWin(updatedField, 'O') ? checkWin(updatedField, 'O') : []\n                };\n            }\n            break;\n        case 'SAVE_NAME':\n            if (!state.player1) {\n                return {\n                    ...state,\n                    player1: action.payload\n                }\n            } else if (!state.player2) {\n                return {\n                    ...state,\n                    player2: action.payload\n                }\n            }\n            break;\n        case 'CHOOSE_EMOJI':\n            if (state.player1 && !state.player1Icon) {\n                return {\n                    ...state,\n                    player1Icon: action.payload\n                }\n            } else if (state.player2 && !state.player2Icon) {\n                return {\n                    ...state,\n                    player2Icon: action.payload\n                }\n            }\n            break;\n        case 'RESTART_GAME':\n            if (state.winner === state.player1) {\n                const updateScore = state.score.player1 + 1;\n                console.log(state.winner === state.player1)\n                console.log(state.player1)\n                return {\n                    ...state,\n                    field: [\n                        [null, null, null],\n                        [null, null, null],\n                        [null, null, null]\n                    ],\n                    currentPlayer: 1,\n                    winner: null,\n                    score: {...state.score, player1: updateScore}, winCombo: []\n                }\n            } else if (state.winner === state.player2) {\n                const updateScore = state.score.player2 + 1;\n                return {\n                    ...state,\n                    field: [\n                        [null, null, null],\n                        [null, null, null],\n                        [null, null, null]\n                    ],\n                    currentPlayer: 1,\n                    winner: null,\n                    score: {...state.score, player2: updateScore}, winCombo: []\n                }\n            } else {\n                return {\n                    ...state,\n                    field: [\n                        [null, null, null],\n                        [null, null, null],\n                        [null, null, null]\n                    ],\n                    currentPlayer: 1,\n                    winner: null,\n                    winCombo: []\n                }\n            }\n            break;\n        case 'RESET_ALL':\n            return {\n                player1: '',\n                player2: '',\n                player1Icon: null,\n                player2Icon: null,\n                field: [\n                    [null, null, null],\n                    [null, null, null],\n                    [null, null, null]\n                ],\n                currentPlayer: 1,\n                winner: null,\n                score: {player1: 0, player2: 0}\n            }\n        default:\n            return state;\n    }\n}\n\nconst checkWin = (fieldToCheck, player) => {\n    if (fieldToCheck[1][1] === player) { //check diagonal\n        if (fieldToCheck[0][0] === player && fieldToCheck[2][2] === player) return [[0, 0], [1, 1], [2, 2]];\n        if (fieldToCheck[0][2] === player && fieldToCheck[2][0] === player) return [[0, 2], [1, 1], [2, 0]];\n    }\n    for (let i = 0; i < 3; i++) {\n        if (fieldToCheck[i].every(cell => cell === player)) return [[i, 0], [i, 1], [i, 2]]; // check rows\n        if (fieldToCheck.every(row => row[i] === player)) return [[0, i], [1, i], [2, i]]; // check columns\n    }\n    if (fieldToCheck.every(row => row.every(cell => cell))) return 'tie';\n    return false;\n}\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}